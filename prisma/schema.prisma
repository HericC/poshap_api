// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String    @unique
  phone          String
  password       String
  services       Service[]
  ordersProvider Order[]   @relation(name: "provider")
  ordersClient   Order[]   @relation(name: "client")
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @default(now()) @updatedAt
  deletedAt      DateTime?

  @@map("user")
}

model Service {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  category    String
  price       Float
  description String?
  scheduling  Boolean   @default(false)
  priority    Boolean   @default(false)
  providerId  String    @db.ObjectId
  provider    User      @relation(fields: [providerId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now()) @updatedAt
  deletedAt   DateTime?

  @@map("service")
}

model Order {
  id                                       String    @id @default(auto()) @map("_id") @db.ObjectId
  category                                 String
  price                                    Float
  description                              String?
  schedulingDate                           DateTime?
  clientFirstSchedulingConfirmationDate    DateTime?
  clientSecondSchedulingConfirmationDate   DateTime?
  providerFirstSchedulingConfirmationDate  DateTime?
  providerSecondSchedulingConfirmationDate DateTime?
  providerId                               String    @db.ObjectId
  clientId                                 String    @db.ObjectId
  provider                                 User      @relation(fields: [providerId], references: [id], name: "provider")
  client                                   User      @relation(fields: [clientId], references: [id], name: "client")
  createdAt                                DateTime  @default(now())
  updatedAt                                DateTime  @default(now()) @updatedAt
  deletedAt                                DateTime?

  @@map("order")
}
